name: Build Python Installer

on:
  pull_request:
    branches: [main]
    types:
      - opened
      - reopened
      - synchronize
      - closed
  schedule:
    - cron: "15 22 * * *" # once a day
  workflow_dispatch: # Enable manual trigger
    inputs:
      target_versions:
        description: 'Target version list separated by slash. Tags or minor versions are acceptable. (ex: "v3.8.N/v3.7.M" or "3.9/3.10")'
        required: true
      debug_enabled:
        type: boolean
        description: "Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)"
        required: false
        default: false
jobs:
  build_matrix:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    timeout-minutes: 3
    outputs:
      BUILD_MATRIX: ${{ steps.gen_matrix.outputs.BUILD_MATRIX }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Generate build matrix
        id: gen_matrix
        run: |
          build_matrix=$(python ci/gen_matrix.py)
          echo "BUILD_MATRIX=$build_matrix" >> "$GITHUB_OUTPUT"
        env:
          EVENT_NAME: ${{ github.event_name }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          TARGET_VERSIONS: ${{ github.event.inputs.target_versions }}
  build:
    runs-on: ${{ matrix.os }}
    needs: build_matrix
    name: Build ${{ matrix.version }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.build_matrix.outputs.BUILD_MATRIX) }}
        # matrix elements
        #   os: Runner OS
        #   version: version name to build
        #   branch: branch name to build
        #   HOST_PYTHON: python version used on build
    permissions:
      contents: read
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Show env
        run: cmd /c set
      - uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        # Use a specific version as HOST_PYTHON
        name: Use Python ${{ matrix.HOST_PYTHON }} as HOST_PYTHON
        id: host_python
        with:
          python-version: ${{ matrix.HOST_PYTHON }}
        if: matrix.HOST_PYTHON
      - name: Build Installer
        run: |
          powershell -NoProfile -File .\ci\build_installer.ps1 `
            -OutDirectory "${{ github.workspace }}\dist" "${{ matrix.branch }}"
        env:
          HOST_PYTHON: ${{ matrix.HOST_PYTHON && steps.host_python.outputs.python-path || '' }}
      - name: Check built installer
        run: |
          Get-ChildItem -R 'dist'
          $count = (Get-ChildItem -ea Stop 'dist/**/python-*-amd64.exe').Count
          if ($count -eq 0) { Write-Error -ea Stop 'Build for installer failed!' }
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ matrix.version }}
          path: |
            dist/**/python-*-amd64.exe
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@e5c7151931ca95bad1c6f4190c730ecf8c7dde48 # v3.19
        with:
          limit-access-to-actor: true
        if: github.event_name == 'workflow_dispatch' && inputs.debug_enabled && failure()
  release:
    runs-on: ubuntu-24.04
    # Release installer after release PR is merged
    if: |
      github.event_name == 'pull_request'
      && github.head_ref == 'new_release'
      && github.event.action == 'closed'
      && github.event.pull_request.merged
    needs: [build_matrix, build]
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.build_matrix.outputs.BUILD_MATRIX) }}
    name: Release (${{ matrix.version }})
    permissions:
      contents: write
    timeout-minutes: 10
    steps:
      - id: process
        run: |
          tag=${{ matrix.version }}
          echo "VERSION=${tag#v}" >> "$GITHUB_OUTPUT"
          echo "VERSION_SLUG=$(echo $tag | grep -o '[0-9]' | tr -d '\n')" >> "$GITHUB_OUTPUT"
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: true # FIXME: This line causes ghalint error
      - uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
      - name: Show downloaded artifacts
        run: ls -AlR ${{ matrix.version }}
      - name: VirusTotal scan
        id: virustotal
        uses: crazy-max/ghaction-virustotal@d34968c958ae283fe976efed637081b9f9dcf74f # v4.2.0
        with:
          vt_api_key: ${{ secrets.VT_API_KEY }}
          files: |
            ${{ matrix.version }}/**/python-*-amd64.exe
      - name: Get VirusTotal analysis URL
        id: analysis-url
        run: |
          url=$(echo "$VIRUSTOTAL_ANALYSIS" | grep -o 'http.*$')
          echo "url=$url" >> "$GITHUB_OUTPUT"
        env:
          # Analysis results formatted as "<filename>=<analysisURL>" (comma separated)
          VIRUSTOTAL_ANALYSIS: ${{ steps.virustotal.outputs.analysis }}
      - name: Create tag
        run: |
          git tag "${{ matrix.version }}"
          git push --tags
      - name: Create release
        id: create_release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # v1.1.4
        with:
          tag_name: ${{ matrix.version }}
          release_name: Python ${{ steps.process.outputs.VERSION }}
          body: |
            ### üìù Description

            Python ${{ steps.process.outputs.VERSION }} Installer ([Official release page](https://www.python.org/downloads/release/python-${{ steps.process.outputs.VERSION_SLUG }}/))

            ### üõ° [VirusTotal GitHub Action](https://github.com/crazy-max/ghaction-virustotal) analysis

            - [`python-${{ steps.process.outputs.VERSION }}-amd64.exe`](${{ steps.analysis-url.outputs.url }})
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1.0.2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ matrix.version }}/amd64/python-${{ steps.process.outputs.VERSION }}-amd64.exe
          asset_name: python-${{ steps.process.outputs.VERSION }}-amd64.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
