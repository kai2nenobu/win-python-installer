name: Build Python Installer

on:
  pull_request:
    branches: [main]
    types:
    - opened
    - reopened
    - synchronize
    - closed
  schedule:
  - cron:  '15 22 * * *'  # once a day
  workflow_dispatch: # Enable manual trigger
    inputs:
      target_versions:
        description: 'Target version list separated by slash. Tags or minor versions are acceptable. (ex: "v3.8.N/v3.7.M" or "3.9/3.10")'
        required: true
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
jobs:
  build_matrix:
    runs-on: ubuntu-20.04
    outputs:
      BUILD_MATRIX: ${{ steps.gen_matrix.outputs.BUILD_MATRIX }}
    steps:
    - uses: actions/checkout@v4
    - name: Generate build matrix
      id: gen_matrix
      run: |
        build_matrix=$(python ci/gen_matrix.py)
        echo "BUILD_MATRIX=$build_matrix" >> "$GITHUB_OUTPUT"
      env:
        EVENT_NAME: ${{ github.event_name }}
        BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        PR_TITLE: ${{ github.event.pull_request.title }}
        TARGET_VERSIONS: ${{ github.event.inputs.target_versions }}
  build:
    runs-on: ${{ matrix.os }}
    needs: build_matrix
    name: Build ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.build_matrix.outputs.BUILD_MATRIX) }}
        # matrix elements
        #   os: Runner OS
        #   version: version name to build
        #   branch: branch name to build
        #   HOST_PYTHON: python version used on build
    steps:
    - uses: actions/checkout@v4
    - name: Show env
      run: cmd /c set
    - uses: actions/setup-python@v5
      # Use a specific version as HOST_PYTHON
      name: Use Python ${{ matrix.HOST_PYTHON }} as HOST_PYTHON
      id: host_python
      with:
        python-version: ${{ matrix.HOST_PYTHON }}
      if: matrix.HOST_PYTHON
    - name: Build Installer
      run: |
        powershell -NoProfile -File .\ci\build_installer.ps1 `
          -OutDirectory "${{ github.workspace }}\dist" "${{ matrix.branch }}"
      env:
        HOST_PYTHON: ${{ matrix.HOST_PYTHON && steps.host_python.outputs.python-path || '' }}
    - name: Check built installer
      run: |
        Get-ChildItem -R 'dist'
        $count = (Get-ChildItem -ea Stop 'dist/**/python-*-amd64.exe').Count
        if ($count -eq 0) { Write-Error -ea Stop 'Build for installer failed!' }
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.version }}
        path: |
          dist/**/python-*-amd64.exe
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
      if: github.event_name == 'workflow_dispatch' && inputs.debug_enabled && failure()
