name: Release Python Installer

on:
  push:
    tags: ['v*']

jobs:
  ref:
    runs-on: ubuntu-20.04
    outputs:
      tag: ${{ steps.process.outputs.TAG }}
      version: ${{ steps.process.outputs.VERSION }}
      # GITHUB_REF„ÅÆÊï∞Â≠óÈÉ®ÂàÜ„ÇíÁµêÂêà„Åó„ÅüÊñáÂ≠óÂàó (ex: refs/tags/v3.6.13 -> 3613)
      version-slug: ${{ steps.process.outputs.VERSION_SLUG }}
    steps:
    - id: process
      run: |
        echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
        echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}
        echo ::set-output name=VERSION_SLUG::$(echo $GITHUB_REF | grep -o [0-9] | tr -d '\n')
  build-2016:
    runs-on: windows-2016
    needs: [ref]
    if: ${{ startswith(needs.ref.outputs.tag, 'v3.6') }}
    steps:
    - uses: actions/checkout@v1
    - name: Build Installer
      run: |
        powershell -NoProfile -File .\ci\build_installer.ps1 `
          -OutDirectory "${{ github.workspace }}\dist" "${{ needs.ref.outputs.tag }}"
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ needs.ref.outputs.tag }}
        path: |
          dist/**/python-*-amd64.exe
  build-2019:
    runs-on: windows-2019
    needs: [ref]
    if: ${{ !startswith(needs.ref.outputs.tag, 'v3.6') }}
    steps:
    - uses: actions/checkout@v1
    - name: Build Installer
      run: |
        powershell -NoProfile -File .\ci\build_installer.ps1 `
          -OutDirectory "${{ github.workspace }}\dist" "${{ needs.ref.outputs.tag }}"
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ needs.ref.outputs.tag }}
        path: |
          dist/**/python-*-amd64.exe
  release:
    runs-on: ubuntu-20.04
    needs: [ref, build-2016, build-2019]
    if: always()
    steps:
    - uses: actions/checkout@v1
    - uses: actions/download-artifact@v2
    - name: Show downloaded artifacts
      run: ls -AlR ${{ needs.ref.outputs.tag }}
    - name: VirusTotal scan
      id: virustotal
      uses: crazy-max/ghaction-virustotal@v2
      with:
        vt_api_key: ${{ secrets.VT_API_KEY }}
        files: |
          **/python-*-amd64.exe
    - name: Get VirusTotal analysis URL
      id: analysis-url
      run: |
        url=$(echo '${{ steps.virustotal.outputs.analysis }}' | grep -o 'http.*$')
        echo "::set-output name=url::$url"
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ needs.ref.outputs.tag }}
        release_name: Python ${{ needs.ref.outputs.version }}
        body: |
          ### üìù Description

          Python ${{ needs.ref.outputs.version }} Installer ([Official release page](https://www.python.org/downloads/release/python-${{ needs.ref.outputs.version-slug }}/))

          ### üõ° [VirusTotal GitHub Action](https://github.com/crazy-max/ghaction-virustotal) analysis

          - [`python-${{ needs.ref.outputs.version }}-amd64.exe`](${{ steps.analysis-url.outputs.url }})
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ needs.ref.outputs.tag }}/amd64/python-${{ needs.ref.outputs.version }}-amd64.exe
        asset_name: python-${{ needs.ref.outputs.version }}-amd64.exe
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
